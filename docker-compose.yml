version: "3.7"

name: kubi
services:
    frontend:
        container_name: kubi-frontend
        image: "ghcr.io/alxbrla/kubi-epitech/frontend:latest@sha256:d3a5bf0884eed9deafdc9c22126e01713e691987f82e6875ee38b80e10bd8c30"
        ports:
            - "3000:80"
        depends_on:
            - backend-nginx
        networks:
            - kubi-network

    backend:
        container_name: kubi-backend
        image: "ghcr.io/alxbrla/kubi-epitech/backend:latest@sha256:8de76568dda9b9c4d0fbf46334addaf53dd29ceffe491ef5e806c79c08d73994"
        ports:
            - "9000:9000"
        volumes:
            - ./back:/var/www
        depends_on:
            db:
                condition: service_healthy
            rabbitmq:
                condition: service_healthy
            elastic-search:
                condition: service_healthy
        networks:
            - kubi-network
        entrypoint: ["/usr/local/bin/entrypoint.sh"]

    backend-nginx:
        image: nginx:1.17-alpine
        container_name: kubi-backend-nginx
        ports:
            - "3001:8080"
        volumes:
            - ./back/:/var/www
            - ./back/nginx/:/etc/nginx/conf.d
        networks:
            - kubi-network
        depends_on:
            - backend

    db:
        container_name: kubi-db
        image: mysql:5.7
        ports:
            - "3306:3306"
        volumes:
            - kubi-db-data:/var/lib/mysql
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: toto
            MYSQL_USER: test
            MYSQL_PASSWORD: test
        networks:
            - kubi-network
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
            interval: 30s
            timeout: 10s
            retries: 3

    indexer:
        container_name: kubi-indexer
        image: "ghcr.io/alxbrla/kubi-epitech/indexer:latest@sha256:cf8f123262ffa6f5764d7152e43d0dfd70a72a66a4689cd1bc296e385bc507f6"
        depends_on:
            backend:
                condition: service_started
            rabbitmq:
                condition: service_healthy
            elastic-search:
                condition: service_healthy
        networks:
            - kubi-network
        environment:
            - AMQP_URI=amqp://rabbitmq:rabbitmq@rabbitmq:5672/
            - ELASTICSEARCH_URI=http://elastic-search:9200

    rabbitmq:
        container_name: kubi-rabbitmq
        image: rabbitmq:3.11.13-alpine
        ports:
            - "5672:5672"
            - "15672:15672"
        environment:
            RABBITMQ_DEFAULT_USER: rabbitmq
            RABBITMQ_DEFAULT_PASS: rabbitmq
        networks:
            - kubi-network
        healthcheck:
            test: rabbitmq-diagnostics -q check_running
            interval: 30s
            timeout: 30s
            retries: 5
            start_period: 10s

    elastic-search:
        container_name: kubi-elastic-searchex
        image: docker.elastic.co/elasticsearch/elasticsearch:7.13.4
        ports:
            - "9200:9200"
            - "9300:9300"
        environment:
            - discovery.type=single-node
        depends_on:
            db:
                condition: service_healthy
        networks:
            - kubi-network
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "curl --silent --fail localhost:9200/_cluster/health || exit 1"
                ]
            interval: 30s
            timeout: 10s
            retries: 5

networks:
    kubi-network:
        # name the network
        name: kubi-network
        driver: bridge

volumes:
    kubi-db-data:
        driver: local
